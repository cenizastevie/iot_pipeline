Resources:
  EKSClusterRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: eks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy

  EKSCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: IoT-EKS-Cluster
      RoleArn: !GetAtt EKSClusterRole.Arn
      ResourcesVpcConfig:
        SubnetIds:
          - !ImportValue PublicSubnetId
          - !ImportValue PrivateSubnetId
          - !ImportValue PublicSubnet2Id
          - !ImportValue PrivateSubnet2Id
        SecurityGroupIds:
          - !Ref EKSSecurityGroup

  EKSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EKS Cluster Security Group
      VpcId: !ImportValue VPCId

  NodeInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy

  NodeGroup:
    Type: AWS::EKS::Nodegroup
    Properties:
      ClusterName: !Ref EKSCluster
      NodeRole: !GetAtt NodeInstanceRole.Arn
      Subnets:
        - !ImportValue PublicSubnetId
        - !ImportValue PrivateSubnetId
      ScalingConfig:
        MinSize: 2
        MaxSize: 10
        DesiredSize: 5
      InstanceTypes:
        - t3.large

  EKSAdditionalRBACPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: EKSAdditionalRBACPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: Statement1
            Effect: Allow
            Action:
              - "eks:DescribeNodegroup"
              - "eks:ListNodegroups"
              - "eks:DescribeCluster"
              - "eks:ListClusters"
              - "eks:AccessKubernetesAPI"
              - "ssm:GetParameter"
              - "eks:ListUpdates"
              - "eks:ListFargateProfiles"
            Resource: "*"
      Roles:
        - !Ref EKSClusterRole

Outputs:
  EKSClusterName:
    Value: !Ref EKSCluster
    Export:
      Name: EKSClusterName

  NodeInstanceRoleArn:
    Value: !GetAtt NodeInstanceRole.Arn
    Export:
      Name: NodeInstanceRoleArn
